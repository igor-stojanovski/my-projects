import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";

import { ProductItemData } from "../../components/ProductItem";
import { useRouter } from "next/router";
import { useState } from "react";

interface Props {
  filteredProducts: ProductItemData[];
}

const Shop: NextPage<Props> = ({ filteredProducts }) => {
  const { push, asPath, query } = useRouter();

  const [searchInput, setSearchInput] = useState("");

  const handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {
    setSearchInput(event.target.value);
  };

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath === "/shop" ? "how-active1" : ""
                }`}
                data-filter="*"
                onClick={() => {
                  push({
                    pathname: "/shop",
                    query: {},
                  });
                }}
              >
                All Products
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath.includes("gender=women") ? "how-active1" : ""
                }`}
                data-filter=".women"
                onClick={() => {
                  push({
                    pathname: "/shop",
                    query: {
                      gender: "women",
                    },
                  });
                }}
              >
                Women
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath.includes("gender=man") ? "how-active1" : ""
                }`}
                data-filter=".men"
                onClick={() => {
                  push({
                    pathname: "/shop",
                    query: {
                      gender: "man",
                    },
                  });
                }}
              >
                Men
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath.includes("q=belt") ? "how-active1" : ""
                }`}
                data-filter=".bag"
                onClick={() => {
                  push({
                    pathname: "/shop",
                    query: {
                      q: "belt",
                    },
                  });
                }}
              >
                Belt
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath.includes("q=converse") ? "how-active1" : ""
                }`}
                data-filter=".shoes"
                onClick={() => {
                  push({
                    pathname: "/shop",
                    query: {
                      q: "converse",
                    },
                  });
                }}
              >
                Shoes
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath.includes("q=watch") ? "how-active1" : ""
                }`}
                data-filter=".watches"
                onClick={() => {
                  push({
                    pathname: "/shop",
                    query: {
                      q: "watch",
                    },
                  });
                }}
              >
                Watches
              </button>
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div
                className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search"
                onClick={() => {
                  if (!searchInput) return;
                  push({
                    pathname: "/shop",
                    query: {
                      ...query,
                      q: searchInput,
                    },
                  });
                  setSearchInput("");
                }}
              >
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                  value={searchInput}
                  onChange={handleSearchInput}
                />
              </div>
            </div>
          </div>

          <div className="row isotope-grid">
            {filteredProducts.length > 0 ? (
              filteredProducts?.map((product) => {
                return (
                  <div
                    key={product.id}
                    className="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item women"
                  >
                    <div className="block2">
                      <div className="block2-pic hov-img0">
                        <img src={product.img} alt="IMG-PRODUCT" />

                        <a
                          href={`/shop/${product.id}`}
                          className="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
                        >
                          View Details
                        </a>
                      </div>

                      <div className="block2-txt flex-w flex-t p-t-14">
                        <div className="block2-txt-child1 flex-col-l ">
                          <a
                            href="product-detail.html"
                            className="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6"
                          >
                            {product.title}
                          </a>

                          <span className="stext-105 cl3">{product.price}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                );
              })
            ) : (
              <p>There are no results with your search. Try again!</p>
            )}
          </div>

          {/* <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div> */}
        </div>
      </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const gender = query.gender;
  const searchQuery = query.q;

  let link: string;
  if (gender && searchQuery) {
    link = `http://localhost:5001/products?gender_like=${gender}&q=${searchQuery}`;
  } else if (gender) {
    link = `http://localhost:5001/products?gender_like=${gender}`;
  } else if (searchQuery) {
    link = `http://localhost:5001/products?q=${searchQuery}`;
  } else {
    link = `http://localhost:5001/products?`;
  }

  const res = await fetch(link);
  const filteredProducts: ProductItemData[] = await res.json();

  return {
    props: {
      filteredProducts,
    },
  };
};

export default Shop;
