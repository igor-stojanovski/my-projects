import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import BlogItem, { BlogItemData } from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem, { ProductItemData } from "../components/ProductItem";

interface Props {
  products: ProductItemData[];
  blogs: BlogItemData[];
}

const Search: NextPage<Props> = ({ blogs, products }) => {
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Search" />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {blogs.length > 0 ? (
            <>
              <h2 className="mb-5">Blogs</h2>
              <div className="row isotope-grid">
                {blogs.map((blog) => (
                  <div className="col-4" key={blog.id}>
                    <BlogItem {...blog} />
                  </div>
                ))}
              </div>
            </>
          ) : null}

          {products.length > 0 ? (
            <>
              <h2 className="mb-5">Products</h2>
              <div className="row isotope-grid">
                {products.map((product) => (
                  <ProductItem key={product.id} {...product} />
                ))}
              </div>
            </>
          ) : null}
        </div>

        {products.length === 0 && blogs.length === 0 && (
          <p className="text-center">
            There are no results with your search! Feel free to search for
            something else!
          </p>
        )}
      </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let resBlogs,
    blogs: BlogItemData[] | null = null;

  let resProducts,
    products: ProductItemData[] | null = null;

  const searchQuery = query?.q;

  if (searchQuery) {
    resBlogs = await fetch(`http://localhost:5001/blogs?q=${searchQuery} `);
    blogs = await resBlogs.json();

    resProducts = await fetch(
      `http://localhost:5001/products?q=${searchQuery} `
    );
    products = await resProducts.json();
  }

  return {
    props: {
      blogs,
      products,
    },
  };
};

export default Search;
